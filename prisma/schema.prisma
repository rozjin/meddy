// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  
  email String @unique
  password String

  name String?
  dob DateTime?
  gender String?
  phone_number String?

  proof_id String[]
  address String?

  is_modifiable Boolean @default(true)

  patient Patient?
}

model Patient {
  id Int @id @default(autoincrement())

  friendly_id String @unique
  nhi String? @unique

  otc String[]
  allergies Allergy[]

  medicines Medicine[]
  prescriptions Prescription[]
  orders Order[]

  user User @relation(fields: [user_id], references: [id])
  user_id Int @unique
}


model Allergy {
  id Int @id @default(autoincrement())

  trigger String
  condition String

  patient Patient @relation(fields: [patient_id], references: [id])
  patient_id Int
}

model Medicine {
  id Int @id @default(autoincrement())
  friendly_id String @unique

  name String

  is_packs Boolean
  is_automatic Boolean @default(false)

  cur_renew Int @default(1)
  num_renew Int @default(1)
  next_renewal DateTime

  prescriber String

  note String?
  unit String

  patient Patient? @relation(fields: [patient_id], references: [id])
  patient_id Int

  prescription Prescription? @relation(fields: [prescription_id], references: [id])
  prescription_id Int

  orders Order[]
  repeats MedicineRepeat[]
}

model MedicineRepeat {
  id Int @id @default(autoincrement())
  friendly_id String @unique

  created DateTime @default(now())
  cur_renew Int

  approved Boolean @default(false)

  medicine Medicine @relation(fields: [medicine_id], references: [id])
  medicine_id Int
}

model Prescription {
  id Int @id @default(autoincrement())
  friendly_id String @unique

  method PrescriptionMethod
  progress PrescriptionProgress

  created DateTime @default(now())

  medicines Medicine[]
  pictures String[]
  other_pharmacy String?

  patient Patient @relation(fields: [patient_id], references: [id])
  patient_id Int
}

model Order {
  id Int @id @default(autoincrement())
  friendly_id String @unique 

  created DateTime @default(now())
  delivered DateTime
  deliver_by DateTime @default(now())

  ask_consult Boolean @default(false)
  is_consult Boolean @default(false)

  progress OrderProgress
  address String

  medicines Medicine[]

  patient Patient @relation(fields: [patient_id], references: [id])
  patient_id Int
}

enum OrderProgress {
  PREPARING
  CONSULT
  
  SHIPPED
  TRANSIT

  DELIVERED
  CANCELLED
}

enum PrescriptionMethod {
  UPLOAD
  MAIL
  FAX
  EPS
}

enum PrescriptionProgress {  
  REQUESTED
  RECEIVED

  FILLED
  CANCELLED
}